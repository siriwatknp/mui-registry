{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "tremor-stacked-bar-chart",
  "type": "registry:component",
  "title": "Tremor Stacked Bar Chart",
  "description": "A comprehensive stacked bar chart component with regional tabs showing payment data over time periods",
  "dependencies": [
    "@mui/material",
    "@mui/x-charts",
    "@emotion/react",
    "@emotion/styled"
  ],
  "registryDependencies": [],
  "files": [
    {
      "path": "registry/new-york/components/tremor-stacked-bar-chart/tremor-stacked-bar-chart.tsx",
      "content": "\"use client\";\n\nimport * as React from 'react';\nimport { \n  Box, \n  Card, \n  CardContent,\n  Tabs, \n  Tab,\n  Typography,\n  Stack\n} from '@mui/material';\nimport { BarChart } from '@mui/x-charts/BarChart';\n\ninterface PaymentData {\n  month: string;\n  successful: number;\n  refunded: number;\n  fraudulent: number;\n  [key: string]: string | number;\n}\n\ninterface RegionData {\n  region: 'Europe' | 'North America';\n  data: PaymentData[];\n}\n\n// Sample data matching the mockup\nconst mockData: RegionData[] = [\n  {\n    region: 'Europe',\n    data: [\n      { month: 'Jan 23', successful: 15, refunded: 2, fraudulent: 1 },\n      { month: 'Feb 23', successful: 28, refunded: 3, fraudulent: 1 },\n      { month: 'Mar 23', successful: 32, refunded: 4, fraudulent: 2 },\n      { month: 'Apr 23', successful: 22, refunded: 2, fraudulent: 0 },\n      { month: 'May 23', successful: 26, refunded: 3, fraudulent: 0 },\n      { month: 'Jun 23', successful: 24, refunded: 2, fraudulent: 1 },\n      { month: 'Jul 23', successful: 18, refunded: 1, fraudulent: 0 },\n      { month: 'Aug 23', successful: 30, refunded: 4, fraudulent: 1 },\n      { month: 'Sep 23', successful: 25, refunded: 2, fraudulent: 1 },\n      { month: 'Oct 23', successful: 20, refunded: 2, fraudulent: 0 },\n      { month: 'Nov 23', successful: 22, refunded: 2, fraudulent: 1 },\n      { month: 'Dec 23', successful: 31, refunded: 3, fraudulent: 1 }\n    ]\n  },\n  {\n    region: 'North America',\n    data: [\n      { month: 'Jan 23', successful: 18, refunded: 3, fraudulent: 1 },\n      { month: 'Feb 23', successful: 25, refunded: 4, fraudulent: 1 },\n      { month: 'Mar 23', successful: 32, refunded: 5, fraudulent: 2 },\n      { month: 'Apr 23', successful: 23, refunded: 3, fraudulent: 1 },\n      { month: 'May 23', successful: 28, refunded: 4, fraudulent: 1 },\n      { month: 'Jun 23', successful: 30, refunded: 5, fraudulent: 1 },\n      { month: 'Jul 23', successful: 20, refunded: 2, fraudulent: 0 },\n      { month: 'Aug 23', successful: 35, refunded: 6, fraudulent: 2 },\n      { month: 'Sep 23', successful: 24, refunded: 3, fraudulent: 1 },\n      { month: 'Oct 23', successful: 28, refunded: 4, fraudulent: 1 },\n      { month: 'Nov 23', successful: 22, refunded: 3, fraudulent: 0 },\n      { month: 'Dec 23', successful: 31, refunded: 5, fraudulent: 2 }\n    ]\n  }\n];\n\nconst LegendItem = ({ \n  color, \n  label, \n  value \n}: { \n  color: string; \n  label: string; \n  value: number; \n}) => (\n  <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\n    <Box \n      sx={{ \n        width: 12, \n        height: 12, \n        bgcolor: color,\n        borderRadius: 1\n      }} \n    />\n    <Typography variant=\"body2\" sx={{ color: 'text.secondary', mr: 1 }}>\n      {label}\n    </Typography>\n    <Typography variant=\"body2\" sx={{ fontWeight: 'medium' }}>\n      {value}\n    </Typography>\n  </Box>\n);\n\nexport default function TremorStackedBarChart() {\n  const [selectedRegion, setSelectedRegion] = React.useState(0);\n  \n  const currentRegionData = mockData[selectedRegion];\n  \n  // Calculate totals for legend\n  const totals = currentRegionData.data.reduce(\n    (acc, item) => ({\n      successful: acc.successful + item.successful,\n      refunded: acc.refunded + item.refunded,\n      fraudulent: acc.fraudulent + item.fraudulent\n    }),\n    { successful: 0, refunded: 0, fraudulent: 0 }\n  );\n\n  const handleRegionChange = (event: React.SyntheticEvent, newValue: number) => {\n    setSelectedRegion(newValue);\n  };\n\n  return (\n    <Card \n      sx={{ \n        maxWidth: 600, \n        mx: 'auto',\n        border: '1px solid',\n        borderColor: 'divider',\n        boxShadow: 1\n      }}\n    >\n      <CardContent sx={{ p: 3 }}>\n        {/* Header */}\n        <Typography \n          variant=\"h6\" \n          sx={{ \n            mb: 3,\n            fontWeight: 600,\n            color: 'text.primary'\n          }}\n        >\n          Online payments\n        </Typography>\n\n        {/* Tabs */}\n        <Box sx={{ borderBottom: 1, borderColor: 'divider', mb: 3 }}>\n          <Tabs\n            value={selectedRegion}\n            onChange={handleRegionChange}\n            aria-label=\"region selection tabs\"\n            sx={{\n              '& .MuiTab-root': {\n                textTransform: 'none',\n                fontWeight: 500,\n                fontSize: '0.875rem',\n                minHeight: 36,\n                px: 0,\n                mr: 4,\n                color: 'text.secondary',\n                '&.Mui-selected': {\n                  color: 'primary.main',\n                }\n              },\n              '& .MuiTabs-indicator': {\n                height: 2,\n                backgroundColor: 'primary.main',\n              },\n            }}\n          >\n            <Tab \n              label=\"Europe\" \n              id=\"region-tab-0\"\n              aria-controls=\"chart-panel\"\n            />\n            <Tab \n              label=\"North America\" \n              id=\"region-tab-1\"\n              aria-controls=\"chart-panel\"\n            />\n          </Tabs>\n        </Box>\n\n        {/* Chart */}\n        <Box \n          id=\"chart-panel\"\n          role=\"tabpanel\"\n          aria-labelledby={`region-tab-${selectedRegion}`}\n          aria-label={`Payment data chart for ${currentRegionData.region}`}\n          sx={{ mb: 3 }}\n        >\n          <BarChart\n            title={`Online payments data for ${currentRegionData.region}`}\n            dataset={currentRegionData.data}\n            xAxis={[{ \n              dataKey: 'month',\n              scaleType: 'band',\n              tickLabelStyle: {\n                fontSize: 12,\n                fill: '#6b7280'\n              }\n            }]}\n            yAxis={[{\n              tickLabelStyle: {\n                fontSize: 12,\n                fill: '#6b7280'\n              }\n            }]}\n            series={[\n              { \n                dataKey: 'successful', \n                stack: 'total',\n                color: '#2563eb',\n                label: 'Successful'\n              },\n              { \n                dataKey: 'refunded', \n                stack: 'total',\n                color: '#8b5cf6',\n                label: 'Refunded'\n              },\n              { \n                dataKey: 'fraudulent', \n                stack: 'total',\n                color: '#ec4899',\n                label: 'Fraudulent'\n              }\n            ]}\n            height={300}\n            margin={{ left: 40, right: 20, top: 20, bottom: 40 }}\n            sx={{\n              '& .MuiChartsAxis-root': {\n                '& .MuiChartsAxis-line': {\n                  stroke: '#e5e7eb',\n                },\n                '& .MuiChartsAxis-tick': {\n                  stroke: '#e5e7eb',\n                }\n              },\n              '& .MuiChartsLegend-root': {\n                display: 'none'\n              }\n            }}\n          />\n        </Box>\n\n        {/* Custom Legend */}\n        <Stack \n          direction=\"row\" \n          spacing={4}\n          sx={{ \n            justifyContent: 'flex-start',\n            alignItems: 'center'\n          }}\n        >\n          <LegendItem \n            color=\"#2563eb\" \n            label=\"Successful\" \n            value={totals.successful} \n          />\n          <LegendItem \n            color=\"#8b5cf6\" \n            label=\"Refunded\" \n            value={totals.refunded} \n          />\n          <LegendItem \n            color=\"#ec4899\" \n            label=\"Fraudulent\" \n            value={totals.fraudulent} \n          />\n        </Stack>\n      </CardContent>\n    </Card>\n  );\n}",
      "type": "registry:component"
    }
  ],
  "meta": {
    "screenshot": "/screenshots/tremor-stacked-bar-chart.png"
  }
}