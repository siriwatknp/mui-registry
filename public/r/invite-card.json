{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "invite-card",
  "type": "registry:component",
  "title": "Invite Card",
  "description": "A referral card component with gradient header and copy functionality",
  "dependencies": [
    "@mui/material",
    "@mui/icons-material",
    "@emotion/react",
    "@emotion/styled"
  ],
  "registryDependencies": [],
  "files": [
    {
      "path": "registry/new-york/components/invite-card/invite-card.tsx",
      "content": "\"use client\";\n\nimport * as React from \"react\";\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Stack,\n  TextField,\n  Typography,\n} from \"@mui/material\";\nimport {\n  ContentCopy as ContentCopyIcon,\n  Diamond as DiamondIcon,\n  CardGiftcard as CardGiftcardIcon,\n  Link as LinkIcon,\n} from \"@mui/icons-material\";\n\nexport default function InviteCard() {\n  const [inviteLink] = React.useState(\"https://wimt/alexsmith\");\n  const [copied, setCopied] = React.useState(false);\n\n  const handleCopy = async () => {\n    try {\n      await navigator.clipboard.writeText(inviteLink);\n      setCopied(true);\n      setTimeout(() => setCopied(false), 2000);\n    } catch (err) {\n      console.error(\"Failed to copy:\", err);\n    }\n  };\n\n  const features = [\n    {\n      icon: <LinkIcon />,\n      text: \"Share a link\"\n    },\n    {\n      icon: <CardGiftcardIcon />,\n      text: \"Your friend gets 30 credits when they subscribe\"\n    },\n    {\n      icon: <DiamondIcon />,\n      text: \"You receive 30 credits for each referral\"\n    }\n  ];\n\n  return (\n    <Card\n      sx={{\n        maxWidth: 400,\n        mx: \"auto\",\n        borderRadius: 3,\n        overflow: \"hidden\",\n        boxShadow: 1,\n      }}\n    >\n      {/* Header with gradient background */}\n      <Box\n        sx={{\n          height: 160,\n          background: \"linear-gradient(135deg, #667eea 0%, #764ba2 25%, #f093fb 50%, #f5576c 75%, #4facfe 100%)\",\n          position: \"relative\",\n          overflow: \"hidden\",\n        }}\n      >\n        {/* Abstract shapes overlay */}\n        <Box\n          sx={{\n            position: \"absolute\",\n            top: 0,\n            left: 0,\n            right: 0,\n            bottom: 0,\n            background: \"url('data:image/svg+xml,<svg viewBox=\\\"0 0 400 200\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><defs><linearGradient id=\\\"grad1\\\" x1=\\\"0%\\\" y1=\\\"0%\\\" x2=\\\"100%\\\" y2=\\\"100%\\\"><stop offset=\\\"0%\\\" stop-color=\\\"%23667eea\\\" stop-opacity=\\\"0.3\\\"/><stop offset=\\\"100%\\\" stop-color=\\\"%23764ba2\\\" stop-opacity=\\\"0.5\\\"/></linearGradient></defs><ellipse cx=\\\"100\\\" cy=\\\"50\\\" rx=\\\"80\\\" ry=\\\"40\\\" fill=\\\"url(%23grad1)\\\" transform=\\\"rotate(45 100 50)\\\"/><ellipse cx=\\\"300\\\" cy=\\\"150\\\" rx=\\\"60\\\" ry=\\\"80\\\" fill=\\\"%23f093fb\\\" fill-opacity=\\\"0.4\\\" transform=\\\"rotate(-30 300 150)\\\"/><circle cx=\\\"350\\\" cy=\\\"30\\\" r=\\\"30\\\" fill=\\\"%23f5576c\\\" fill-opacity=\\\"0.3\\\"/></svg>')\",\n            backgroundSize: \"cover\",\n            backgroundPosition: \"center\",\n            backgroundRepeat: \"no-repeat\",\n          }}\n        />\n      </Box>\n\n      <CardContent sx={{ p: 2.5 }}>\n        <Stack spacing={2.5}>\n          {/* Title */}\n          <Typography \n            variant=\"h4\" \n            component=\"h2\" \n            sx={{ \n              fontWeight: 600, \n              color: \"text.primary\",\n              mb: 1 \n            }}\n          >\n            Invite & Profit\n          </Typography>\n\n          {/* How it works section */}\n          <Box>\n            <Typography \n              variant=\"subtitle1\" \n              sx={{ \n                color: \"text.secondary\", \n                mb: 2,\n                fontWeight: 500 \n              }}\n            >\n              How it works:\n            </Typography>\n\n            <List sx={{ p: 0 }}>\n              {features.map((feature, index) => (\n                <ListItem key={index} sx={{ px: 0, py: 1 }}>\n                  <ListItemIcon sx={{ minWidth: 40 }}>\n                    <Box\n                      sx={{\n                        display: \"flex\",\n                        alignItems: \"center\",\n                        justifyContent: \"center\",\n                        width: 24,\n                        height: 24,\n                        color: \"text.primary\",\n                      }}\n                    >\n                      {feature.icon}\n                    </Box>\n                  </ListItemIcon>\n                  <ListItemText\n                    primary={feature.text}\n                    primaryTypographyProps={{\n                      variant: \"body1\",\n                      color: \"text.primary\",\n                      fontWeight: 400,\n                    }}\n                  />\n                </ListItem>\n              ))}\n            </List>\n          </Box>\n\n          {/* Invite link section */}\n          <Box>\n            <Typography \n              variant=\"subtitle1\" \n              sx={{ \n                color: \"text.secondary\", \n                mb: 2,\n                fontWeight: 500 \n              }}\n            >\n              Your invite link:\n            </Typography>\n\n            <Stack direction=\"row\" spacing={1} alignItems=\"center\">\n              <TextField\n                fullWidth\n                value={inviteLink}\n                variant=\"outlined\"\n                size=\"small\"\n                slotProps={{\n                  input: {\n                    readOnly: true,\n                    startAdornment: (\n                      <LinkIcon \n                        sx={{ \n                          color: \"text.secondary\", \n                          mr: 1, \n                          fontSize: 20 \n                        }} \n                      />\n                    ),\n                  },\n                  htmlInput: {\n                    style: { \n                      cursor: \"default\",\n                      color: \"inherit\" \n                    }\n                  }\n                }}\n                sx={{\n                  \"& .MuiOutlinedInput-root\": {\n                    bgcolor: \"grey.50\",\n                    ...theme => theme.applyStyles('dark', {\n                      bgcolor: \"grey.900\",\n                    }),\n                  },\n                }}\n              />\n              <Button\n                variant=\"contained\"\n                onClick={handleCopy}\n                sx={{\n                  bgcolor: \"grey.900\",\n                  color: \"white\",\n                  borderRadius: 2,\n                  px: 3,\n                  textTransform: \"none\",\n                  fontWeight: 500,\n                  minWidth: 80,\n                  \"&:hover\": {\n                    bgcolor: \"grey.800\",\n                    transform: \"translateY(-1px)\",\n                    boxShadow: 2,\n                  },\n                  ...theme => theme.applyStyles('dark', {\n                    bgcolor: \"grey.100\",\n                    color: \"grey.900\",\n                    \"&:hover\": {\n                      bgcolor: \"grey.200\",\n                      transform: \"translateY(-1px)\",\n                      boxShadow: 2,\n                    },\n                  }),\n                }}\n              >\n                {copied ? \"Copied!\" : \"Copy\"}\n              </Button>\n            </Stack>\n          </Box>\n        </Stack>\n      </CardContent>\n    </Card>\n  );\n}",
      "type": "registry:component"
    }
  ],
  "meta": {
    "screenshot": "/screenshots/invite-card.png"
  }
}